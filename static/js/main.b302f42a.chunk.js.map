{"version":3,"sources":["firebase.js","Post.js","image/Instagram.png","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","username","caption","imageurl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","className","Avatar","src","alt","console","log","text","type","placeholder","value","onChange","e","target","Button","disabled","onClick","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","add","timestamp","FieldValue","serverTimestamp","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","setUsername","email","setEmail","password","setPassword","user","setUser","open","setOpen","openSignIn","setOpenSignIn","onAuthStateChanged","authUser","orderBy","id","post","Modal","onClose","style","logo","event","preventDefault","createUserWithEmailAndPassword","authuser","updateProfile","displayName","catch","alert","message","signInWithEmailAndPassword","signOut","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b302f42a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDXkZtqwwJwLJomVbQqpm-Dn3Za5GrX3oE\",\r\n    authDomain: \"insta-clone-3d888.firebaseapp.com\",\r\n    projectId: \"insta-clone-3d888\",\r\n    storageBucket: \"insta-clone-3d888.appspot.com\",\r\n    messagingSenderId: \"984509391234\",\r\n    appId: \"1:984509391234:web:74c8a8ab1d119fa631af9b\",\r\n    measurementId: \"G-7YG1WD124E\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage};","import React, {useState, useEffect} from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport {Button} from '@material-ui/core'\r\nimport {db} from './firebase'\r\n\r\nconst Post = ({postId, username, caption, imageurl}) => {\r\n    const [comments, setComments] = useState([])\r\n    const [comment, setComment] = useState('')\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if(postId) {\r\n            unsubscribe = db.collection('posts').doc(postId).collection('comments')\r\n            .onSnapshot(snapshot => {\r\n                setComments(snapshot.docs.map((doc) => doc.data()))\r\n            });\r\n        }\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, [postId])\r\n\r\n    const postComment = (e) => {\r\n\r\n    }\r\n     return (\r\n        <div className=\"post\">\r\n        <div className='post_header'>\r\n            <Avatar className='post_avatar' />\r\n            <h4>{username}</h4>\r\n        </div>\r\n            <img className='post_image' src={imageurl} alt=\"INSTAGRAM\" />\r\n            <h4 className='post_caption'> <strong>{username}</strong> {caption}</h4>\r\n            <div className=\"comment_sec\">{console.log(comments)}\r\n                {\r\n                    comments.map(comment => {\r\n                      <p>\r\n                          <strong>{comment.username}</strong>{comment.text}\r\n                      </p> \r\n                    })\r\n                }\r\n            </div>\r\n        <form className=\"post_comment\">\r\n            <input type=\"text\" className=\"comment_inp\" placeholder=\"Enter a Comment..\" value={comment}\r\n            onChange={e => setComment(e.target.value)} />\r\n            <Button disabled={!comment} className='post_button' type='submit' onClick={postComment} >Post</Button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","export default __webpack_public_path__ + \"static/media/Instagram.dcf5a12d.png\";","import React, {useState} from 'react'\r\nimport { db, storage } from './firebase';\r\nimport {Button}  from '@material-ui/core'\r\nimport firebase from 'firebase';\r\nconst ImageUpload = ({username}) => {\r\n    const [caption, setCaption] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]) {\r\n            setImage(e.target.files[0]);     //only first file if multiple is selected\r\n        }\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        const uploadtask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n        uploadtask.on(\"stage_changed\",\r\n        (snapshot) => {         // this is the progress bar\r\n        const progress = Math.round((\r\n            snapshot.bytesTransferred / snapshot.totalBytes * 100\r\n        ));\r\n        setProgress(progress);\r\n        },(error) => console.log(error),() => {\r\n            //on completion\r\n            storage.ref('images').child(image.name).getDownloadURL()\r\n            .then(url => {\r\n                db.collection('posts').add({\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    username : username,\r\n                    imageurl : url,\r\n                    caption : caption\r\n                })\r\n                setProgress(0);\r\n                setCaption('');\r\n                setImage(null);\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"imageUpload\">\r\n            <progress value={progress} className=\"image_progress\" max='100' />\r\n            <input type=\"text\" placeholder='Enter a Caption' onChange={(e) => setCaption(e.target.value)} />\r\n            <input type=\"file\" onChange={handleChange} />\r\n            <Button onClick={handleUpload} >Upload</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUpload;","import './App.css';\nimport './Post.css';\nimport Post from './Post';\nimport logo from './image/Instagram.png'\nimport React, {useState, useEffect} from 'react';\nimport {auth, db} from './firebase'\nimport { Button, makeStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal'\nimport ImageUpload from './ImageUpload';\nimport './ImageUpload.css';\nimport InstagramEmbed from 'react-instagram-embed';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser) {\n        console.log(authUser)\n        setUser(authUser)\n      } else {\n        setUser(null)\n      }\n    })\n    return () => {\n      unsubscribe();\n    }\n  }, [user, username])\n  useEffect(() => {\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    })\n  }, [])\n  \n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth.createUserWithEmailAndPassword(email, password)\n    .then(authuser => {\n      setOpenSignIn(false);\n      authuser.user.updateProfile({displayName: username})\n    })\n    .catch(error => alert(error.message));\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password).then(authuser => {\n      authuser.user.updateProfile({displayName: username})\n      setOpenSignIn(false);\n    }).catch(error => alert(error.message));\n  }\n  return (\n    <div className=\"App\">\n      <Modal\n        open={open}          \n        onClose={() => setOpen(false)}   \n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app_signup'>\n          <center>\n            <img id='logo' src={logo} alt=\"INSTAGRAM\" />\n          </center>\n            <input placeholder='Username' type='text' value={username} onChange={(e) => setUsername(e.target.value) } />\n            <input placeholder='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value) } />\n            <input placeholder='Password' type='text' value={password} onChange={(e) => setPassword(e.target.value) } />\n            <Button type='submit' onClick={signUp}>SignUp</Button>\n          </form>\n        </div>\n      </Modal>\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}  \n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app_signup'>\n          <center>\n            <img id='logo' src={logo} alt=\"INSTAGRAM\" />\n          </center>\n            <input placeholder='Email' type='email' value={email} onChange={(e) => setEmail(e.target.value) } />\n            <input placeholder='Password' type='text' value={password} onChange={(e) => setPassword(e.target.value) } />\n            <Button type='submit' onClick={signIn}>SignIn</Button>\n          </form>\n        </div>\n      </Modal>\n      <header>\n        <img id='logo' src={logo} alt=\"INSTAGRAM\" />\n      {user ? \n      <Button onClick={() => auth.signOut()}>Log Out</Button>\n      :<div className=\"app_loginContainer\">\n       <Button onClick={() => setOpenSignIn(true)}>Log In</Button> \n      <Button onClick={() => setOpen(true)}>Sign Up</Button> \n      </div>\n      }\n      </header>\n      <div className=\"all_posts\">\n        <div className=\"left_post\">\n      {\n        posts.map(({id, post}) => (\n          <Post key={id} postId={id} username={post.username} caption={post.caption} imageurl={post.imageurl} />\n        ) )\n      }\n      </div>\n      <div className=\"right_post\">\n        <InstagramEmbed\n          url='https://www.instagram.com/p/B4NWsdXngs6PBmMPEPPJolgXT1iPhroL00Qy_00/'\n          clientAccessToken='123|456'\n          maxWidth={320}\n          hideCaption={false}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => {}}\n          onSuccess={() => {}}\n          onAfterRender={() => {}}\n          onFailure={() => {}}\n        />\n      </div>\n      </div>\n      {user?.displayName ? \n      <ImageUpload username={user.displayName} /> :\n      <h3>You need to login to Upload</h3>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}